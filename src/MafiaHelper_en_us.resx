<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionsNames" xml:space="preserve">
    <value>Execute
Kill
Heal
Reveal the role
Save
Mute
—
Steal the role
Explode
—
Kill the criminal
Rip apart
Protect
Kill
—</value>
  </data>
  <data name="ActionsResults" xml:space="preserve">
    <value>executed
killed
healed
role has been revealed
saved
muted
—
role has been stolen
exploded
—
killed
gutted
protected
killed
—</value>
  </data>
  <data name="Action_Skip" xml:space="preserve">
    <value>Skip the role</value>
  </data>
  <data name="AllButton" xml:space="preserve">
    <value>Entire list</value>
  </data>
  <data name="AllRolesUsed" xml:space="preserve">
    <value>All roles are already in use</value>
  </data>
  <data name="BBegin" xml:space="preserve">
    <value>Begin the game</value>
  </data>
  <data name="BLog" xml:space="preserve">
    <value>Log</value>
  </data>
  <data name="BRules" xml:space="preserve">
    <value>Game rules</value>
  </data>
  <data name="BSettings" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="DayText" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="ExecutionResult_Protected" xml:space="preserve">
    <value>player was protected from this action</value>
  </data>
  <data name="ExecutionResult_Role" xml:space="preserve">
    <value>player can’t apply this role to himself</value>
  </data>
  <data name="ExecutionResult_Skipped" xml:space="preserve">
    <value>role has been skipped</value>
  </data>
  <data name="ExecutionResult_State" xml:space="preserve">
    <value>player’s status doesn’t allow this action</value>
  </data>
  <data name="ExecutionResult_Success" xml:space="preserve">
    <value>successful</value>
  </data>
  <data name="ExitMessage" xml:space="preserve">
    <value>After exit, the game will be restored to its initial state, and roles will need to be reassigned.

Leave the game?</value>
  </data>
  <data name="Header1" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Header2" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="Header3" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Header4" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Header5" xml:space="preserve">
    <value>Votes</value>
  </data>
  <data name="Log_ActionsResult" xml:space="preserve">
    <value>Result of actions ({0:S}):</value>
  </data>
  <data name="Log_GameStart" xml:space="preserve">
    <value>Game started with the next configuration:</value>
  </data>
  <data name="Log_Interrupted" xml:space="preserve">
    <value>The game has been cancelled!</value>
  </data>
  <data name="MafiaLostMessage" xml:space="preserve">
    <value>Townspeople win!</value>
  </data>
  <data name="MafiaWonMessage" xml:space="preserve">
    <value>Mafia won!</value>
  </data>
  <data name="MusicButton" xml:space="preserve">
    <value>Music</value>
  </data>
  <data name="MusicPathLabel" xml:space="preserve">
    <value>Path to the directory with background music:</value>
  </data>
  <data name="MusicPreparation" xml:space="preserve">
    <value>Preparing background music...</value>
  </data>
  <data name="NightText" xml:space="preserve">
    <value>Night</value>
  </data>
  <data name="NonDefaultRolesLabel" xml:space="preserve">
    <value>The night on which non-default roles begin:</value>
  </data>
  <data name="NonDefaultRolesMessage" xml:space="preserve">
    <value>Nights for non-default roles to wait: {0:D}</value>
  </data>
  <data name="NotEnoughPlayersMessage" xml:space="preserve">
    <value>Not enough players in the game</value>
  </data>
  <data name="NotEnoughRolesMessage" xml:space="preserve">
    <value>There are too few townspeople (less than 50%) or too few mafia (less than 2 players) in the game</value>
  </data>
  <data name="PlayerNameEmptyMessage" xml:space="preserve">
    <value>Player’s name cannot be empty</value>
  </data>
  <data name="PlayersClearMessage" xml:space="preserve">
    <value>Do you want to clear the entire list of players or just their roles?</value>
  </data>
  <data name="PlayersStatus" xml:space="preserve">
    <value>Remaining players: {0:D}
including mafia: {1:D}; yakuza: {2:D}</value>
  </data>
  <data name="PlayersText01" xml:space="preserve">
    <value>First, enter names of players. Enter at least {0:D} names using corresponding button. You can edit the previously created players using left double click.

To the left of the name you can see one of the following roles (one letter):</value>
  </data>
  <data name="PlayersText02" xml:space="preserve">
    <value>Second, arrange the night roles in needed sequence. Please note that the order of roles in the first list is locked and cannot be changed yet</value>
  </data>
  <data name="PlayersTitle" xml:space="preserve">
    <value>Players:</value>
  </data>
  <data name="ResetText" xml:space="preserve">
    <value>Cancel the last one</value>
  </data>
  <data name="RolesAliases" xml:space="preserve">
    <value>OMDIBNPTKSFRJYZ</value>
  </data>
  <data name="RolesButton" xml:space="preserve">
    <value>Roles only</value>
  </data>
  <data name="RolesNames" xml:space="preserve">
    <value>Townspeople
Mafia
Doctor
Detective
Beauty / prostitute
Maniac
Priest / immortal
Thief
Kamikaze
Don / boss of mafia
Sheriff / commissioner
Ripper
Judge
Yakuza
Oyabun / boss of yakuza</value>
  </data>
  <data name="RolesOPrefix" xml:space="preserve">
    <value> (or letter isn’t specified)</value>
  </data>
  <data name="RolesTitle" xml:space="preserve">
    <value>Application order of night roles:</value>
  </data>
  <data name="StatusesNames" xml:space="preserve">
    <value>Dead
Muted
Role is stolen
Role is revealed
Healed / saved
Protected</value>
  </data>
  <data name="TimeoutMessage" xml:space="preserve">
    <value>Time is up</value>
  </data>
  <data name="TimerButton" xml:space="preserve">
    <value>Timer</value>
  </data>
  <data name="TimerEndMessage" xml:space="preserve">
    <value>Time-out message</value>
  </data>
  <data name="TimerLines" xml:space="preserve">
    <value>30 seconds
1 minute
90 seconds
2 minutes
3 minutes
4 minutes
5 minutes</value>
  </data>
  <data name="TimerSettingsLabel" xml:space="preserve">
    <value>Timer settings:</value>
  </data>
  <data name="TimerSound" xml:space="preserve">
    <value>Times sounds (60, 10 and 0 seconds)</value>
  </data>
  <data name="TooMuchPlayersMessage" xml:space="preserve">
    <value>Too much players in the game. The app now supports not more than {0:D} players at a time</value>
  </data>
  <data name="TooMuchSecondaryRolesMessage" xml:space="preserve">
    <value>All roles except for townspeople and mafia shouldn’t be represented by more than one player</value>
  </data>
  <data name="UnknownRoleMessage" xml:space="preserve">
    <value>The role in line {0:D} is incorrect</value>
  </data>
  <data name="VoicesLeftMessage" xml:space="preserve">
    <value>Voices left: </value>
  </data>
  <data name="WrongRoleMessage" xml:space="preserve">
    <value>This role can’t be applied to itself</value>
  </data>
  <data name="YakuzaWonMessage" xml:space="preserve">
    <value>Yakuza won!</value>
  </data>
</root>